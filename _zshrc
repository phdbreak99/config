# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

ZSH_DISABLE_COMPFIX=true

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="dracula"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git osx python)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

PROMPT='
%F{green}%n@%m: %F{blue}%/%f $(git_prompt_info)
%F{green}âžœ  %f'

RPROMPT='%t'

zle_highlight=(default:fg=green) # change input text color

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

setopt nosharehistory

cd_func () {
    cd $1
    ls
}

mkcd_func () {
    mkdir $1
    cd $1
}

shortcut () {
    local cmd
    cmd=$(python3 ~/script/shortcut.py $@)
    eval ${cmd}
}

pwd_func() {
    local cur_dpath
    cur_dpath=$(\pwd)

    if [[ ! -z $1 ]]; then
        cur_dpath=${cur_dpath}/$1
    fi
    echo $cur_dpath

    case `uname` in
        Darwin)
            # commands for OS X go here
            echo ${cur_dpath} | sed 's/\n//g' | pbcopy
            pbpaste
        ;;
        Linux)
            # commands for Linux go here
            echo ${cur_dpath} | sed 's/\n//g' | \xclip -selection clipboard
            \xclip -selection clipbard -o
        ;;
    esac
}

file_to_clipboard () {
    case `uname` in
        Darwin)
            # commands for OS X go here
            cat $1 | pbcopy
        ;;
        Linux)
            # commands for Linux go here
            cat $1 | sed 's/\n//' | \xclip -selection clipboard
        ;;
    esac
}

clipboard_to_file () {
    case `uname` in
        Darwin)
            # commands for OS X go here
            pbpaste > $1
        ;;
        Linux)
            # commands for Linux go here
            \xclip -selection clipboard -p > $1
        ;;
    esac
}

#move files/folders to Trash, instead of rm
move_to_trash() {
    echo "Moving the deleted files/folders to trash @ $TRASH_DPATH"
    dir_tmp=$TRASH_DPATH/`date +%Y-%m-%d`
    subdir_tmp=$dir_tmp/`date +%H:%M:%S`
    if [[ ! -d $dir_tmp ]]; then
        mkdir $dir_tmp
    fi
    if [[ ! -d $subdir_tmp ]]; then
        mkdir $subdir_tmp
    fi
    for target in $@; do
        if [[ $target != -* ]]; then
            mv -v $target $subdir_tmp
        fi
    done
}

trash_cleanup() {
    echo "Cleanup the trash: delete all files/folders older than 30 days"
    find $TRASH_DPATH/ -mtime +30 | xargs \rm -rf
}

# PATH
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${PATH}

case $SHELL_TYPE in
    OSX_HOME)
        # commands for OS X go here
        export MANPATH=/opt/local/share/man:$MANPATH
    ;;
    LINUX_WORK)
        # commands for Linux go here
        export LD_LIBRARY_PATH=/usr/local/lib64:/usr/local/lib:${LD_LIBRARY_PATH}
    ;;
esac

#===========================================================
# alias
#===========================================================

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias cd=cd_func
alias pwd=pwd_func
alias vi='vim'
alias vdiff='vimdiff --noplugin'

# rm to trash
export TRASH_DPATH=$HOME/.trash
alias rm='move_to_trash'

alias ln='ln -s'
alias mkcd='mkcd'
alias du='du -m -d 1'

# shortcut
alias go='shortcut go'
alias run='shortcut run'
alias add='shortcut add'

# grep
alias rgrep='grep -R'
alias igrep='grep -i'
